
 Module "irc":
 -------------

RAW   "iirrcc--rraaww"        MATCHCASE
  int func(INTERFACE *_i_f_a_c_e, char *_s_e_r_v_n_a_m_e, char *_m_e, char *_p_r_e_f_i_x,
	   int _n, char **_p_a_r_a_m_s, size_t (*_l_c) (char *, const char *, size_t));
    Used when we get any message from server _s_e_r_v_n_a_m_e on the network
    _i_f_a_c_e. Optional _p_r_e_f_i_x is message source (see the RFC). Message is
    parsed and binding gets own nick _m_e, number _n of _p_a_r_a_m_s, and server
    specific case conversion function _l_c. Note: return value -1 of the
    binding has unusual meaning: parameters are incorrect.
      Matching: command.  (any flags are ignored)
      Script args: network sender command (params)...

-     "iirrcc--ccoonnnneecctteedd"  MASK
  (int) void func(INTERFACE *_i_f_a_c_e, char *_s_e_r_v_n_a_m_e, char *_n_i_c_k,
		  size_t (*_l_c) (char *, const char *, size_t));
    Used when we are succesfully connected to server _s_e_r_v_n_a_m_e on some
    network _i_f_a_c_e. Binding gets _n_i_c_k that we got and server-specific
    case conversion function _l_c. Note: bindings may be recalled when the
    module gets signal S_FLUSH so don't be alarmed.
      Matching: network name.  (any flags are ignored)
      Script args: network servname nick

-     "iirrcc--ddiissccoonnnneecctteedd" MASK
  (int) void func(INTERFACE *_i_f_a_c_e, char *_s_e_r_v_n_a_m_e, char *_n_i_c_k,
		  size_t (*_l_c) (char *, const char *, size_t));
    Used when we are disconnected from server _s_e_r_v_n_a_m_e on some network
    _i_f_a_c_e. Binding gets _n_i_c_k that we have last and server-specific case
    conversion function _l_c.
      Matching: network name.  (any flags are ignored)
      Script args: network servname nick

PUBM  "iirrcc--ppuubb--mmssgg--mmaasskk" MASK
  (int) void func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
		  char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used when we got a message _m_s_g that came for IRC channel _c_h_a_n from
    someone _c_l_i_e_n_t with nick!user@host _w_h_o (_u_n_i_c_k is his/her nickname
    that is converted to lower case) and is identified as _l_n_a_m_e. _c_h_a_n is
    string in form "#channel@network" (in case of safe channels the name
    "!chan@network" gets short name). Note: matching uses network+global
    flags instead of global ones.
      Matching: "chan msg" string.
      Script args: nick user@host Lname chan@net msg

-     "iirrcc--ppuubb--nnoottiiccee--mmaasskk" MASK
  (int) void func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
		  char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used the same as above but for notice.

PUB   "iirrcc--ppuubb--mmssgg--ccmmdd" UNIQ
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used when we got a message that came for IRC channel _c_h_a_n from
    someone _c_l_i_e_n_t with nick!user@host _w_h_o (_u_n_i_c_k is his/her nickname
    that is converted to lower case) which is identified as _l_n_a_m_e if
    that message may be interpreted as command. _c_h_a_n is string in form
    "#channel@network" (in case of safe channels the name "!chan@network"
    gets short name) and _m_s_g is arguments string to command. Note:
    matching uses network+global flags instead of global ones.
      Matching: command.
      Script args: nick user@host Lname chan@net args

-     "iirrcc--ppuubb--nnoottiiccee--ccmmdd" UNIQ
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used the same as above but for notice.

CTCP  "iirrcc--ppuubb--mmssgg--ccttccpp" MATCHCASE
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used the same as above but for ctcp and with another script arguments
    list.
      Matching: command.
      Script args: nick user@host Lname chan@net command [args]

CTCR  "iirrcc--ppuubb--nnoottiiccee--ccttccpp" MATCHCASE
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_c_h_a_n, char *_m_s_g);
    Used the same as above but for ctcp notice.

MSGM  "iirrcc--pprriivv--mmssgg--mmaasskk" MASK
  (int) void func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
		  char *_u_n_i_c_k, char *_m_s_g);
    Used when we got a message _m_s_g on IRC network that came for me from
    someone _c_l_i_e_n_t with nick!user@host _w_h_o (_u_n_i_c_k is his/her nickname
    that is converted to lower case) and is identified as _l_n_a_m_e. Note:
    matching flags are global+network instead of just global and direct
    service as service ones.
      Matching: msg.
      Script args: nick user@host Lname msg

NOTC  "iirrcc--pprriivv--nnoottiiccee--mmaasskk" MASK
  (int) void func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
		  char *_u_n_i_c_k, char *_m_s_g);
    Used the same as above but for notice.

MSG   "iirrcc--pprriivv--mmssgg--ccmmdd" UNIQ
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_m_s_g);
    Used when we got a message that came on IRC network for me from
    someone _c_l_i_e_n_t with nick!user@host _w_h_o (_u_n_i_c_k is his/her nickname
    that is converted to lower case) which is identified as _l_n_a_m_e if
    that message may be interpreted as command. _m_s_g is arguments string
    to command. Note: matching flags are global+network instead of just
    global and direct service as service ones.
      Matching: command.
      Script args: nick user@host Lname args

-     "iirrcc--pprriivv--nnoottiiccee--ccmmdd" UNIQ
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_m_s_g);
    Used the same as above but for notice.

CTCP  "iirrcc--pprriivv--mmssgg--ccttccpp" MATCHCASE
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_m_s_g);
    Used the same as above but for ctcp and with another script arguments
    list.
      Matching: command.
      Script args: nick user@host Lname mynick command [args]

CTCR  "iirrcc--pprriivv--nnoottiiccee--ccttccpp" MATCHCASE
  int func(INTERFACE *_c_l_i_e_n_t, unsigned char *_w_h_o, char *_l_n_a_m_e,
	   char *_u_n_i_c_k, char *_m_s_g);
    Used the same as above but for notice ctcp.

FLUD  "iirrcc--fflloooodd"      MASK
  int func(unsigned char *_w_h_o, char *_l_n_a_m_e, char *_f_t, char *_c_h_a_n);
    Used before message from someone _l_n_a_m_e with nick!user@host _w_h_o are
    checked for flood so if binding returns not 0 then message must skip
    flood checking. If message target is IRC channel then name of that
    channel is _c_h_a_n, else if target is me then _c_h_a_n contains NULL. Type
    of flood _f_t may be one of "ctcp" or "msg".
      Matching: flood type.
      Script args: nick user@host Lname ft chan

NICK  "iirrcc--nniicckkcchhgg"    MASK
  (int) void func(INTERFACE *_n_e_t, char *_l_n_a_m_e, unsigned char *_w_h_o,
		  char *_l_c_o_l_d_n, char *_n_e_w_n, char *_l_c_n_e_w_n);
    Used when someone with nick!user@host _w_h_o changes on IRC network
    _n_e_t his/her nick to _n_e_w_n and is identified now as _l_n_a_m_e. _l_c_o_l_d_n and
    _l_c_n_e_w_n are old and new nicknames respectively that are converted to
    lower case. Note: matching uses network+global flags instead of
    global ones. Note2: scripts are called for each channel separately
    and script bindings will be called only if module "irc-channel" is
    loaded, and channel flags are not ignored only for script bindings.
      Matching: newnick.
      Script args: oldn user@host Lname channel newn

SIGN  "iirrcc--ssiiggnnooffff"    MASK
  (int) void func(INTERFACE *_n_e_t, char *_l_n_a_m_e, unsigned char *_w_h_o,
		  char *_l_c_n_i_c_k, char *_m_s_g);
    Used when someone _l_n_a_m_e with nick!user@host _w_h_o leaves IRC network
    _n_e_t with the reason _m_s_g. _l_c_n_i_c_k is user nickname that is converted
    to lower case. Note: matching uses network+global flags instead of
    global ones. Note2: scripts are called for each channel separately
    and script bindings will be called only if "irc-channel" module is
    loaded, and channel flags are not ignored only for script bindings.
    Note3: Script bindings here are called too when someone was lost in
    netsplit and in that case reason is undefined.
      Matching: "nick!user@host" string.
      Script args: nick user@host Lname channel msg

SPLT  "iirrcc--nneettsspplliitt"   MASK
  (int) void func(INTERFACE *_n_e_t, char *_l_n_a_m_e, unsigned char *_w_h_o,
		  char *_l_c_n_i_c_k, char *_s_e_r_v_e_r_s);
    Used when some IRC server splits out of another IRC server (_s_e_r_v_e_r_s
    is string "left-server gone-server") on the network _n_e_t and someone
    _l_n_a_m_e with nick!user@host _w_h_o has left our part of network. _l_c_n_i_c_k
    is user nick that is converted to lower case. Note: matching uses
    network+global flags instead of global ones. Note2: scripts are
    called for each channel separately and any script bindings will be
    called only if "irc-channel" module is loaded, and channel flags are
    not ignored only for script bindings.
      Matching: "nick!user@host" string.
      Script args: nick user@host Lname channel

-     "iirrcc--qquuiitt"       MASK
  int func(INTERFACE *_n_e_t, char *_b_u_f, size_t _s_z);
    Used before sending a quit message to the server on the network _n_e_t.
    Zero-terminated text in buffer _b_u_f (of size _s_z) may be rewritten by
    internal binding.
      Matching: network name.  (any flags are ignored)
      Script args: network text
      Bind result: new text line.
