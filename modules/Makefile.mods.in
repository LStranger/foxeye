#
# Makefile for module compilation.
#
# This file is part of FoxEye distribution.
# Copiright (C) 1999-2010 Andrej Gritsenko <andrej@rep.kiev.ua>

SHELL = /bin/sh
FILENAME = $(shell @BASENAME@ `pwd`)
CFILES = $(wildcard *.c)
HFILES = $(wildcard *.h)
HELPFILES = $(wildcard *.help)
DOCFILES = $(wildcard *.ref)
OBJS = $(patsubst %.c,%.o,$(CFILES))
DISTFILES = $(CFILES) $(HFILES) $(HELPFILES) $(DOCFILES)

srcdir = @srcdir@
top_srcdir = ../..
top_builddir = ../..
subdir = modules/$(FILENAME)
override distdir = ${top_builddir}/@PACKAGE@-@VERSION@/$(subdir)

prefix = @prefix@
exec_prefix = @exec_prefix@
pkglibdir = @libdir@/@PACKAGE@
helpdir = $(pkglibdir)/help
docdir = ${prefix}/share/doc/@PACKAGE@-@VERSION@

INCLUDES = -I${top_srcdir}/tree -I${top_srcdir}/core
INSTALL = @INSTALL@ -m 644
mkinstalldirs = $(SHELL) ${top_srcdir}/mkinstalldirs
CFLAGS = -c @CFLAGS@ @DEFS@ $(INCLUDES) @CPPFLAGS@
LDFLAGS = @LDFLAGS@
MODLIBS = @MODLIBS@
FILENAMESUB = $(shell echo $(FILENAME) | sed 's/-/_/g')
EXTRAMODLIBS = $(shell echo `$(MODLIBS); echo $$MODLIBS_$(FILENAMESUB)`)

all static: $(OBJS)

modules: $(FILENAME).so

clean:
	rm -f *.o *.so core *~

$(FILENAME).so: $(OBJS)
	@LD@ $(LDFLAGS) -o $@ $^ $(EXTRAMODLIBS)
       
%.o: %.c $(HFILES) ${top_srcdir}/core/modules.h ${top_srcdir}/core/foxeye.h ${top_srcdir}/core/protos.h
	@CC@ -o $@ $(CFLAGS) -D_STATIC_INIT=modinit_$(FILENAMESUB) $<

install-help:
	$(mkinstalldirs) $(DESTDIR)$(helpdir)
	@list='$(HELPFILES)'; for p in $$list; do \
	    if test -f $$p; then \
		hp=`echo $$p|sed s/.help$$//`; \
		echo "   $(DESTDIR)$(helpdir)/$$hp"; \
		$(INSTALL) $$p $(DESTDIR)$(helpdir)/$$hp; \
	    else :; fi \
	done

install-docs:
	$(mkinstalldirs) $(DESTDIR)$(docdir)
	@list='$(DOCFILES)'; for p in $$list; do \
	    if test -f $$p; then \
		echo "   $(DESTDIR)$(docdir)/$$p"; \
		$(INSTALL) $$p $(DESTDIR)$(docdir)/$$p; \
	    else :; fi \
	done

install install-strip: modules install-help install-docs
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir)
	@if test -f $(FILENAME).so; then \
	    echo "   $(DESTDIR)$(pkglibdir)/$(FILENAME).so"; \
	    $(INSTALL) $(FILENAME).so $(DESTDIR)$(pkglibdir)/$(FILENAME).so; \
	else :; fi

uninstall-help:
	@list='$(HELPFILES)'; for p in $$list; do \
	    hp=`echo $$p|sed s/.help$$//`; \
	    echo "  rm -f $(DESTDIR)$(helpdir)/$$hp"; \
	    rm -f $(DESTDIR)$(helpdir)/$$hp; \
	done

uninstall-docs:
	@list='$(DOCFILES)'; for p in $$list; do \
	    echo "  rm -f $(DESTDIR)$(docdir)/$$p"; \
	    rm -f $(DESTDIR)$(docdir)/$$p; \
	done

uninstall: uninstall-help uninstall-docs
	@if test -f $(DESTDIR)$(pkglibdir)/$(FILENAME).so; then \
	    echo "  rm -f $(DESTDIR)$(pkglibdir)/$(FILENAME).so"; \
	    rm -f $(DESTDIR)$(pkglibdir)/$(FILENAME).so; \
	else :; fi

dist distdir:
	$(mkinstalldirs) $(distdir)
	@dists="$(DISTFILES)"; \
	for file in $$dists; do \
	    ln $(srcdir)/$$file $(distdir) 2> /dev/null \
	    || cp -dp $(srcdir)/$$file $(distdir); \
	done
