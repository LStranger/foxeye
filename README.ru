foxeye реализует сетевую архитектуру в модульном исполнении. Каждый
элемент запущенного приложения можно рассматривать как отдельный
подпроцесс. Каждый элемент взаимодействует с другими через фиксированный
API и может быть, в соответствии с сетевой архитектурой, либо сетью,
либо клиентом, либо сервисом:
сеть   - совокупность серверов и клиентов, к чему подключаемся мы;
сервер - элемент сети, предоставляющий нам свои сервисы;
клиент - элемент сети, использующий наши сервисы;
сервис - отдельный класс услуг, предоставляемый клиентам.

Таким образом, приложение представляет собой набор сервисов, к которым
подключено в некоторый момент времени некоторое количество клиентов в
различных сетях. Само приложение представлено в каждой сети как клиент
или(и) сервер.

Модульная структура подразумевает собой сердцевину с минимальным набором
чаще всего необходимых сервисов, каждый со своим API, и произвольное
количество модулей, каждый из которых представляет некоторый сервис, с
унифицированным API.
Сердцевина выполняет:
- запуск и загрузку модулей;
- взаимодействие клиентов/серверов с сервисами;
- сервис таймера/расписания;
- загрузку и сохранение конфигурации;
- сервис console/telnet команд;
- ведение учёта событий (wtmp).
