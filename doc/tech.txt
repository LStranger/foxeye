constants scheme is x_xxx, used in core are:
A_xxx	client/channel modes
B_xxx	bindtable types
E_xxx	socket errors
F_xxx	requests:logging flags
I_xxx	interface types
M_xxx	socket modes
O_xxx	runtime options
P_xxx	session peer states
S_xxx	signal types
T_xxx	UI packet types
U_xxx	clientrecord types
W_xxx	wtmp events

debug levels (direct sessions may has debug log only if level<3):
0	unknown recoverable errors
1	warnings (unusual situations)
2	data changes
3	extra notices
4	search results
5	any other functions calls
6	any transfers but debug itself
7,8	reserved

listfile (<name> means it can be get via GetField(x,"name")):
record	lname:<passwd>:uid:flags:<info>:<charset>:<.login>:<.logout>:createtime
host	+[[nick!][ident][:passwd]@]host[/port][%connflags]
special	 @servicename:flags:expiretime text
other	 name value

concept for LIDs:
-32768...-1	bans
0		me
1...149		ignores (and IDs of named fields)
150		unused
151...32767	Lnames (special and regular)

speciallnames records:
channels	<passwd>=+k <info>=chanmodelock
networks/bots	<lname>=@lname <.logout>=type(i.e. "irc","eggdrop",etc.)

botnet protocol:
'\010'cmd...		command "cmd..." (adressed to "@*" with flags F_SHARE)
'\013'name passwd	change password for lname name (the same as above)
ch# nick@bot...		message to botnet channel ch# from nick@bot
nick1@bot1 nick@bot...	message to nick1@bot1 from nick@bot

reserved flags for connchain (don't reimplement them!):
S	SSL listener
s	SSL outgoing connection
x	text parser (M_RAW -> M_TEXT)
y	RFC854 (telnet) stripper
Z	compressed link (zlib)

known custom field's names (name type-of-service meaning):
events		OWN	list of custom events
nick		irc	list of nicks for network
net-parms	irc	saved list of network parameters
umode		irc	set this mode on registration
hub		ircd	list of allowed servers behind this
